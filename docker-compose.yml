

volumes:
    postgres_data:
    redis_data:
    n8n_data:

networks:
    n8n_network:
        driver: bridge

x-base: &base
    restart: unless-stopped
    networks:
        - n8n_network
    env_file: .env

services:
    postgres:
        <<: *base
        image: postgres:17-alpine
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_NON_ROOT_USER: ${POSTGRES_NON_ROOT_USER}
            POSTGRES_NON_ROOT_PASSWORD: ${POSTGRES_NON_ROOT_PASSWORD}
        ports:
            - '5432:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./scripts/postgres-init.sh:/docker-entrypoint-initdb.d/postgres-init.sh
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}',
                ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 1G

    redis:
        <<: *base
        image: redis:7-alpine
        command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis_data:/data
        healthcheck:
            test: ['CMD', 'redis-cli', '-a', '${REDIS_PASSWORD}', 'ping']
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            resources:
                limits:
                    cpus: '0.3'
                    memory: 512M

    n8n_main:
        <<: *base
        image: n8nio/n8n:latest
        command: start
        ports:
            - '5678:5678'
        environment:
            - N8N_DISABLE_PRODUCTION_MAIN_PROCESS=true
            - EXECUTIONS_DATA_PRUNE=true
            - EXECUTIONS_DATA_MAX_AGE=72
            - EXECUTIONS_DATA_PRUNE_MAX_COUNT=10000
        volumes:
            - n8n_data:/home/node/.n8n
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        deploy:
            resources:
                limits:
                    cpus: '0.7'
                    memory: 1.5G

    n8n_worker:
        <<: *base
        image: n8nio/n8n:latest
        command: worker --concurrency=5
        scale: 2
        depends_on:
            - n8n_main
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 1G

    n8n_webhook:
        <<: *base
        image: n8nio/n8n:latest
        command: webhook
        ports:
            - '5679:5678'
        depends_on:
            - n8n_main
        deploy:
            resources:
                limits:
                    cpus: '0.4'
                    memory: 768M
        environment:
            - N8N_CONCURRENCY_PRODUCTION_LIMIT=20
